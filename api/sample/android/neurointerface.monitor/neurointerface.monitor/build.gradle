apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    flatDir {
        dirs '../../../../core/android/neurointerface.core/build/outputs/aar'
    }
    google()
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.1"
    defaultConfig {
        applicationId "org.mtbo.neurointerfacemonitor"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
        project.ext.set("archivesBaseName", "neurointerface.monitor");
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        disable 'MissingTranslation'
    }
}

dependencies {
    compile 'org.mtbo.neurointerfacecore:neurointerface.core-release@aar'
    //compile project(':neurointerface.core')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:27.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:27.0.0'
    compile 'com.jakewharton:butterknife:8.7.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    compile 'com.google.code.gson:gson:2.8.1'
}


task('increaseVersionCode').doLast {
    def versionCode = Integer.parseInt(VERSION_CODE) + 1
    def versionName = VERSION_NAME.split("\\.")
    def last = Integer.parseInt(versionName[versionName.length - 1])
    versionName[versionName.length - 1] = Integer.toString(last + 1)
    versionName = versionName.join(".")

    ant.propertyfile(file: "../gradle.properties") {
        entry(key: "VERSION_CODE", value: versionCode)
        entry(key: "VERSION_NAME", value: versionName)
    }
}